// We need to pressurize most types of resources in ServiceModule fuel tanks.
@TANK_DEFINITION[ServiceModule]:Final
{
	@TANK[Kerosene]
	{
		@note = (pressurized)
	}
	@TANK[N2O4]
	{
		@note = (pressurized)
	}
	@TANK[UDMH]
	{
		@note = (pressurized)
	}
	@TANK[Hydrazine]
	{
		@note = (pressurized)
	}
	@TANK[Aerozine]
	{
		@note = (pressurized)
	}
	@TANK[MMH]
	{
		@note = (pressurized)
	}
	@TANK[HTP]
	{
		@note = (pressurized)
	}
	@TANK[Syntin]
	{
		@note = (pressurized)
	}
	@TANK[NitricAcid]
	{
		@note = (pressurized)
	}
	@TANK[NitrousOxide]
	{
		@note = (pressurized)
	}
	@TANK[Amines]
	{
		@note = (pressurized)
	}
	@TANK[Alcohol]
	{
		@note = (pressurized)
	}
	@TANK[LiquidFuel]
	{
		@note = (pressurized)
	}
	@TANK[Oxidizer]
	{
		@note = (pressurized)
	}	
	@TANK[MonoPropellant]
	{
		@note = (pressurized)
	}
}

// And now comes the fuel tanks that should use ServiceModule.

// AIES
@PART[satpropt300FuelTank]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 300
		type = ServiceModule
	}
}

@PART[tankminsond]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 140
		type = ServiceModule
	}
}

@PART[tankorb1]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 1200
		type = ServiceModule
	}
}

@PART[tanktoemv2]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 550
		type = ServiceModule
	}
}

// KW
@PART[KW1mtankPancake]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 562.5
		type = ServiceModule
	}
}

@PART[KW2mtankPancake]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 4500
		type = ServiceModule
	}
}

@PART[KW3mtankPancake]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 15187.5
		type = ServiceModule
	}
}

// NP
@PART[NP_lft_625m_1m]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 400
		type = ServiceModule
	}
}

// RLA
@PART[RLA_s_tank1]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 62.5
		type = ServiceModule
	}
}

@PART[RLA_s_tank2]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 125
		type = ServiceModule
	}
}

// Stock
@PART[miniFuelTank]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 62.5
		type = ServiceModule
	}
}

@PART[fuelTankSmallFlat]:Final
{
	!MODULE[ModuleFuelTanks] {}
	MODULE
	{
		name = ModuleFuelTanks
		volume = 500
		type = ServiceModule
	}
}

// Finally we need some pressure-fed engines.

// AIES
@PART[dest5Engine]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

@PART[enginelmodc]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

@PART[microEngineex1sat]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

@PART[microEngineSE1]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

// NP

@PART[NP_lfe_125m_RMA3]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

// Stock

@PART[smallRadialEngine]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

@PART[microEngine]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}

@PART[radialEngineMini]:Final
{
	@MODULE[ModuleEngineIgnitor]
	{
		@useUllageSimulation = true
		isPressureFed = true
	}
}
